//[imageloading-core](../index.md)/[dev.chrisbanes.accompanist.imageloading](index.md)/[MaterialLoadingImage](-material-loading-image.md)



# MaterialLoadingImage  
  
Brief description  


A wrapper around Image which implements the [Material Image Loading](https://material.io/archive/guidelines/patterns/loading-images.html) pattern.



## Parameters  
  
  
  
|  Name|  Summary| 
|---|---|
| alignment| Optional alignment parameter used to place the ImageAsset in the given bounds defined by the width and height.
| asset| The ImageAsset to draw.
| clock| The AnimationClockObservable to use for running animations.
| colorFilter| Optional ColorFilter to apply for the ImageAsset when it is rendered onscreen
| contentScale| Optional scale parameter used to determine the aspect ratio scaling to be used if the bounds are a different size from the intrinsic size of the ImageAsset.
| fadeInDurationMs| The duration of the fade-in animation in milliseconds.
| fadeInEnabled| Whether the fade-in animation should be used or not.
| modifier| Modifier used to adjust the layout algorithm or draw decoration content (ex. background)
  
  
Content  
@Composable()  
  
fun [MaterialLoadingImage](-material-loading-image.md)(asset: ImageAsset, modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, clock: AnimationClockObservable, fadeInEnabled: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInDurationMs: [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html))  


  
Brief description  


A wrapper around Image which implements the [Material Image Loading](https://material.io/archive/guidelines/patterns/loading-images.html) pattern.



## Parameters  
  
  
  
|  Name|  Summary| 
|---|---|
| alignment| Optional alignment parameter used to place the painter in the given bounds defined by the width and height.
| clock| The AnimationClockObservable to use for running animations.
| colorFilter| Optional ColorFilter to apply for the ImageAsset when it is rendered onscreen
| contentScale| Optional scale parameter used to determine the aspect ratio scaling to be used if the bounds are a different size from the intrinsic size of the ImageAsset.
| fadeInDurationMs| The duration of the fade-in animation in milliseconds.
| fadeInEnabled| Whether the fade-in animation should be used or not.
| modifier| Modifier used to adjust the layout algorithm or draw decoration content (ex. background)
| painter| The Painter to draw.
  
  
Content  
@Composable()  
  
fun [MaterialLoadingImage](-material-loading-image.md)(painter: Painter, modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, clock: AnimationClockObservable, fadeInEnabled: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInDurationMs: [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html))  


  
Brief description  


A wrapper around Image which implements the [Material Image Loading](https://material.io/archive/guidelines/patterns/loading-images.html) pattern.



## Parameters  
  
  
  
|  Name|  Summary| 
|---|---|
| alignment| Optional alignment parameter used to place the ImageAsset in the given bounds defined by the width and height.
| clock| The AnimationClockObservable to use for running animations.
| colorFilter| Optional ColorFilter to apply for the ImageAsset when it is rendered onscreen
| contentScale| Optional scale parameter used to determine the aspect ratio scaling to be used if the bounds are a different size from the intrinsic size of the ImageAsset.
| fadeInDurationMs| The duration of the fade-in animation in milliseconds.
| fadeInEnabled| Whether the fade-in animation should be used or not.
| modifier| Modifier used to adjust the layout algorithm or draw decoration content (ex. background)
| result| A [ImageLoadState.Success](-image-load-state/-success/index.md) instance.
| skipFadeWhenLoadedFromMemory| Whether the fade animation should be skipped when the result has been loaded from memory.
  
  
Content  
@Composable()  
  
fun [MaterialLoadingImage](-material-loading-image.md)(result: [ImageLoadState.Success](-image-load-state/-success/index.md), modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, clock: AnimationClockObservable, skipFadeWhenLoadedFromMemory: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInEnabled: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInDurationMs: [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html))  



