//[coil](../index.md)/[dev.chrisbanes.accompanist.coil](index.md)



# Package dev.chrisbanes.accompanist.coil  


## Types  
  
|  Name|  Summary| 
|---|---|
| [ErrorResult](-error-result/index.md)|   <br>Brief description  <br>Indicates that an error occurred while executing the request.  <br>Content  <br>data class [ErrorResult](-error-result/index.md)(**image**: ImageAsset?, **throwable**: [Throwable](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-throwable/index.html)) : [RequestResult](-request-result/index.md)  <br>
| [ImageLoadingColorMatrix](-image-loading-color-matrix/index.md)|   <br>Brief description  <br>An extension to [ColorMatrix](https://developer.android.com/reference/kotlin/android/graphics/ColorMatrix.html) which implements the Material Design image loading pattern.  <br>Content  <br>class [ImageLoadingColorMatrix](-image-loading-color-matrix/index.md)(**saturation**: [Float](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float/index.html), **alpha**: [Float](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float/index.html), **brightness**: [Float](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float/index.html)) : [ColorMatrix](https://developer.android.com/reference/kotlin/android/graphics/ColorMatrix.html)  <br>
| [RequestResult](-request-result/index.md)|   <br>Brief description  <br>Represents the result of an image request.  <br>Content  <br>sealed class [RequestResult](-request-result/index.md)  <br>
| [SuccessResult](-success-result/index.md)|   <br>Brief description  <br>Indicates that the request completed successfully.  <br>Content  <br>data class [SuccessResult](-success-result/index.md)(**image**: ImageAsset, **source**: DataSource) : [RequestResult](-request-result/index.md)  <br>


## Functions  
  
|  Name|  Summary| 
|---|---|
| [CoilImage](-coil-image.md)|   <br>Brief description  <br>Creates a composable that will attempt to load the given request using Coil, and then display the result in the provided image content.This version of the function allows complete control over how the loaded image is displayed, by being able to provide custom layout:CoilImage(  <br>  data = resourceUri(R.raw.sample),  <br>) { result ->  <br>  FancyImage(asset = result.image)  <br>}  <br>Content  <br>@Composable()  <br>  <br>fun [CoilImage](-coil-image.md)(request: ImageRequest, modifier: Modifier, imageLoader: ImageLoader, shouldRefetchOnSizeChange: ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), onRequestCompleted: ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html), error: ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, loading: () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, image: ([SuccessResult](-success-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html))  <br>  <br>Brief description  <br>Creates a composable that will attempt to load the given data using Coil, and then display the result in the provided image content.This version of the function allows complete control over how the loaded image is displayed, by being able to provide custom layout:CoilImage(  <br>  data = resourceUri(R.raw.sample),  <br>) { result ->  <br>  FancyImage(asset = result.image)  <br>}  <br>Content  <br>@Composable()  <br>  <br>fun [CoilImage](-coil-image.md)(data: [Any](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html), modifier: Modifier, imageLoader: ImageLoader, shouldRefetchOnSizeChange: ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), onRequestCompleted: ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html), error: ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, loading: () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, image: ([SuccessResult](-success-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html))  <br>  <br>Brief description  <br>Creates a composable that will attempt to load the given request using Coil, and then display the result in an Image.  <br>Content  <br>@Composable()  <br>  <br>fun [CoilImage](-coil-image.md)(request: ImageRequest, modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, fadeIn: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), imageLoader: ImageLoader, shouldRefetchOnSizeChange: ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), onRequestCompleted: ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html), error: ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, loading: () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?)  <br>  <br>Brief description  <br>Creates a composable that will attempt to load the given data using Coil, and then display the result in an Image.  <br>Content  <br>@Composable()  <br>  <br>fun [CoilImage](-coil-image.md)(data: [Any](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html), modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, fadeIn: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), imageLoader: ImageLoader, shouldRefetchOnSizeChange: ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), onRequestCompleted: ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html), error: ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?, loading: () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?)  <br>
| [CoilImageWithCrossfade](-coil-image-with-crossfade.md)|   <br>Content  <br>@Composable()  <br>  <br>~~fun~~ [~~CoilImageWithCrossfade~~](-coil-image-with-crossfade.md)~~(~~~~request~~~~:~~ ImageRequest~~,~~ ~~modifier~~~~:~~ Modifier~~,~~ ~~alignment~~~~:~~ Alignment~~,~~ ~~contentScale~~~~:~~ ContentScale~~,~~ ~~crossfadeDuration~~~~:~~ [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)~~,~~ ~~imageLoader~~~~:~~ ImageLoader~~,~~ ~~shouldRefetchOnSizeChange~~~~:~~ ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)~~,~~ ~~onRequestCompleted~~~~:~~ ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)~~,~~ ~~error~~~~:~~ ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?~~,~~ ~~loading~~~~:~~ () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?~~)~~  <br>@Composable()  <br>  <br>~~fun~~ [~~CoilImageWithCrossfade~~](-coil-image-with-crossfade.md)~~(~~~~data~~~~:~~ [Any](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)~~,~~ ~~modifier~~~~:~~ Modifier~~,~~ ~~alignment~~~~:~~ Alignment~~,~~ ~~contentScale~~~~:~~ ContentScale~~,~~ ~~crossfadeDuration~~~~:~~ [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)~~,~~ ~~imageLoader~~~~:~~ ImageLoader~~,~~ ~~shouldRefetchOnSizeChange~~~~:~~ ([RequestResult](-request-result/index.md), IntSize) -> [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)~~,~~ ~~onRequestCompleted~~~~:~~ ([RequestResult](-request-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)~~,~~ ~~error~~~~:~~ ([ErrorResult](-error-result/index.md)) -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?~~,~~ ~~loading~~~~:~~ () -> [Unit](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)?~~)~~  <br>
| [MaterialLoadingImage](-material-loading-image.md)|   <br>Brief description  <br>A wrapper around Image which implements the [Material Image Loading](https://material.io/archive/guidelines/patterns/loading-images.html) pattern.  <br>Content  <br>@Composable()  <br>  <br>fun [MaterialLoadingImage](-material-loading-image.md)(asset: ImageAsset, modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, clock: AnimationClockObservable, fadeInEnabled: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInDurationMs: [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html))  <br>@Composable()  <br>  <br>fun [MaterialLoadingImage](-material-loading-image.md)(result: [SuccessResult](-success-result/index.md), modifier: Modifier, alignment: Alignment, contentScale: ContentScale, colorFilter: ColorFilter?, clock: AnimationClockObservable, skipFadeWhenLoadedFromMemory: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInEnabled: [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html), fadeInDurationMs: [Int](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html))  <br>

